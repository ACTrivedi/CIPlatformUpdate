@model CIPlatformIntegration.Entities.ViewModel.AdminViewModel;


<div>
    <h2 class="storyTag">Add Mission</h2>
    <hr style="margin-top: -10px;" />

</div>

<div>

    <form method="post" class="m-4 needs-validation"  asp-controller="Admin" asp-action="AddMissionWithDetails" enctype="multipart/form-data" novalidate>
        <input hidden id="singleMissionIdCheck" asp-for="@Model.singleMission.MissionId" />
        <div class="mb-3">
            <label for="Title" class="form-label">Title</label>
            <input type="text" asp-for="@Model.singleMission.Title" class="form-control" id="Title" required>
            <div class="invalid-feedback">
                *Title Is Required
            </div>

        </div>
        <div class="mb-3">
            <label for="ShortDescription" class="form-label">ShortDescription</label>
            <textarea id="ShortDescription" asp-for="singleMission.ShortDescription" class="form-control" required></textarea>
            <div class="invalid-feedback">
              *Short Descirption Is Required
            </div>

        </div>
        <div class="mb-3">
            <label for="Description" class="form-label">Description</label>

            <textarea asp-for="singleMission.Description" class="form-control tinyForMission" id="default"  required></textarea>

            <div class="invalid-feedback">
                *Descirption Is Required
            </div>

        </div>

        <div class="row mb-3">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="Country" class="form-label">Country</label>
                <select asp-for="@Model.singleMission.CountryId" class="form-select " required>
                    <option value="">Select Country</option>
                    @foreach (var item in @Model.countries)
                    {
                        <option value="@item.CountryId">
                            @item.Name
                        </option>
                    }
                </select>
                <div class="invalid-feedback">
                    *Country Is required
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="City" class="form-label">City</label>
                <select asp-for="@Model.singleMission.CityId" class="form-select " required>
                    <option value="">Select City</option>
                    @foreach (var item in @Model.cities)
                    {
                        <option value="@item.CityId">
                            @item.Name
                        </option>
                    }
                </select>
                <div class="invalid-feedback">
                    *City Is required
                </div>
            </div>
        </div>

        <div class="mb-3">
            <label for="Orgnizationname" class="form-label">Organisation Name</label>
            <input type="text" asp-for="@Model.singleMission.OrganizationName" class="form-control" id="Orgnizationname">
        </div>

        <div class="mb-3">
            <label for="OrgnizationDetails" class="form-label">Organisation Details</label>
            <input type="text" asp-for="@Model.singleMission.OrganizationDetail" class="form-control" id="OrgnizationDetails">
        </div>

        <div class="row mb-3">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="StartDate" class="form-label">StartDate</label>
                <input type="date" asp-for="@Model.singleMission.StartDate" class="form-control" id="StartDate" required/>
                 <div class="invalid-feedback">
                    *Start Date Is required
                </div>

            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="EndDate" class="form-label">End Date</label>
                <input type="date" asp-for="@Model.singleMission.EndDate" class="form-control" id="EndDate" required/>
                <div class="invalid-feedback">
                    *End Date Is required
                </div>

            </div>

        </div>

        <div class="mb-3">
            <label for="Type" class="form-label">Mission Type</label>
            <select asp-for="@Model.singleMission.MissionType" id="typeselect" class="form-control">
                <option value="">
                    Select Mission Type
                </option>
                <option value="Goal">
                    Goal
                </option>
                <option value="Time">
                    Time
                </option>
            </select>
        </div>
        
        <div id="goalSelected" class="row mb-3  d-none">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="GoalObjectiveText" class="form-label">Goal Objective Text</label>
                              
                    <input type="text"  class="form-control" id="GoalObjectiveText" name="goalObjectiveText"  />
                                                                                   
                              

            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="GoalValue" class="form-label">Goal Value</label>
               
                     <input  type="text" class="form-control" id="GoalValue" name="goalValue"  />
                                                    
                

            </div>
        </div>
        <div id="timeSelected" class="row mb-3">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 ">

                <label for="TotalSeats" class="form-label">Total Seats</label>
                <input type="text" asp-for="@Model.singleMission.TotalSeats" class="form-control" id="TotalSeats" required  />
                <div class="invalid-feedback">
                *Total Seats Is Required
                </div>

            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="Deadline" class="form-label">Deadline</label>
                <input asp-for="@Model.singleMission.RegistrationDeadline" type="date" class="form-control" id="Deadline" required  />
                <div class="invalid-feedback">
                    Deadline Is Required
                </div>

            </div>
        </div>
        <div class="row mb-3">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="Theme" class="form-label">Theme</label>
                <select asp-for="@Model.singleMission.ThemeId" class="form-select" required>
                    <option value="">Open this select menu</option>
                    @foreach (var item in @Model.missionThemes)
                    {
                        <option value="@item.MissionThemeId">
                            @item.Title
                        </option>
                    }
                </select>
                <div class="invalid-feedback">
                    *Theme Is required
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

                <label for="Skill" class="form-label">Skill</label>

                <select name="Skilllist" size="8" class="form-control" id="missionSkills" multiple>
                    @foreach (var item in @Model.skills)
                    {
                        if (item.Status == 1)
                        {
                            <option value="@item.SkillId">
                                @item.SkillName
                            </option>
                        }
                        else
                        {
                            
                        }

                    }
                </select>

            </div>
        </div>


         <div class="row mb-3">
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                <label for="DefualtMissionPhoto" class="form-label">Default Mission Photos</label>
                <input type="file" name="defaultImage" class="form-control" id="DefualtMissionPhoto" src="" required>
                <div class="invalid-feedback">
                    *Default Image Is required
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-3">
            <label for="MissionDocument" class="form-label">Mission Document</label>
            <input asp-for="Files" type="file" multiple class="form-control" />        
            
             </div>
        </div>

       
            
            <div class="col-lg-12 input-div d-flex flex-column">
                <div class="image">
                    <img src="~/images/add.png" />
                </div>
                <p>Drag & drop pictures here or <strong>Browse</strong></p>
                <input type="file" id="selectedfile" class="file" multiple="multiple" name="missionImages" required>
            </div>

            <output></output>
        
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-3">
            <label for="MissionAvability" class="form-label">Mission Avability</label>
            <input type="text" asp-for="@Model.singleMission.Availability" class="form-control" id="MissionAvability">
        </div>

        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 mb-3">
            <label for="MissionVideo" class="form-label">Mission VideoURL</label>
            <input type="text" name="MissionVideoURL" class="form-control" id="MissionVideo">
        </div>

        </div>
        

        <input type="submit" class="btn btn-primary" value="Submit"/>
    </form>


    <script>
        
            
                
           
             
  

            // Example starter JavaScript for disabling form submissions if there are invalid fields
            (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
            .forEach(function (form) {
            form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
            }

            form.classList.add('was-validated')
            }, false)
            })
            })()

            $('#typeselect').on('change', function () {
            if ($('#typeselect').val() == "Time") {

                $('#goalSelected').addClass("d-none");                         

            }
            if ($('#typeselect').val() == "Goal") {

                 $('#goalSelected').removeClass("d-none");  

            }

            });





            //For Mission Images


            

const inputDiv = document.querySelector(".input-div")
let input = document.querySelector("#selectedfile")


const output = document.querySelector("output")
let imagesArray = []

input.addEventListener("change", () => {

    const files = input.files
    console.log(files)
    for (let i = 0; i < files.length; i++) {
        imagesArray.push(files[i])
    }
    displayImages()
})


inputDiv.addEventListener("drop", () => {
    e.preventDefault()
    const files = e.dataTransfer.files
    for (let i = 0; i < files.length; i++) {
        if (!files[i].type.match("image")) continue;

        if (imagesArray.every(image => image.name !== files[i].name))
            imagesArray.push(files[i])
    }
    displayImages()
})

function displayImages() {
    let images = ""
    imagesArray.forEach((image, index) => {
        images += `<div class="image">
                        <img src="${URL.createObjectURL(image)}" alt="image">
                        <span onclick="deleteImage(${index})">&times;</span>
                      </div>`
    })
    output.innerHTML = images
}


function deleteImage(index) {
    imagesArray.splice(index, 1)
    displayImages()
}




    </script>
</div>




