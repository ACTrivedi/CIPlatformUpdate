@model CIPlatformIntegration.Entities.Models.User;



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="CSS/bootstrap.min.css">
    <link rel="stylesheet" href="~/CSS/Registration.css ">

    <script src="JS/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   
    <title>Registration</title>
</head>
<body>


    @{
        if (ViewData["userExists"] != null)
        {

            <script type="text/javascript">
                 const Toast = Swal.mixin({
                  toast: true,
                  position: 'top-end',
                  showConfirmButton: false,
                  timer: 2000,
                  timerProgressBar: true,
                  didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                  }
                })

                Toast.fire({
                  icon: 'error',
                  title: 'User Already Exists!'
                })
            </script>
        }


    }
    <div class="container-fluid p-0">
        <div class="row align-items-center p-0">
            <div class="col-lg-8 p-0">
                <div id="carouselExampleCaptions" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
                    </div>
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="~/images/Grow-Trees-On-the-path-to-environment-sustainability-login.png" class="d-block w-100 image" alt="...">
                            <div class="carousel-caption d-none d-md-block text-start">
                                <h3>This is CI Platform</h3>
                                <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nihil voluptas hic, quas error veritatis quo laudantium doloremque magni nisi expedita ullam quos facere at molestiae incidunt omnis est? Ut, similique.</p>
                            </div>
                        </div>
                        <div class="carousel-item">
                            <img src="~/images/Grow-Trees-On-the-path-to-environment-sustainability-login.png" class="d-block w-100 image" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>Second slide label</h5>
                                <p>Some representative placeholder content for the second slide.</p>
                            </div>
                        </div>
                        <div class="carousel-item">
                            <img src="~/images/Grow-Trees-On-the-path-to-environment-sustainability-login.png" class="d-block w-100 image" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>Third slide label</h5>
                                <p>Some representative placeholder content for the third slide.</p>
                            </div>
                        </div>
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            <div class="col-lg-4" style="position: relative;">

                @using (Html.BeginForm("Registration", "Home", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {

                    <div class="form-group">
                        <label for="FirstName">First Name</label>
                        @Html.TextBoxFor(x=>x.FirstName,new {@class="form-control", @placeholder="First Name", required = "required"})
                        <div class="invalid-feedback">
                            *Please provide a valid First Name.
                        </div>



                    </div>

                    <div class="form-group mt-3">
                        <label for="LastName">Last Name</label>
                        @Html.TextBoxFor(x=>x.LastName,new {@class="form-control", @placeholder="Last Name", required = "required"})
                        <div class="invalid-feedback">
                            *Please provide a valid Last Name.
                        </div>
                    </div>
                    <div class="form-group mt-3">
                        <label for="PhoneNumber">Phone Number</label>
                        @Html.TextBoxFor(x=>x.PhoneNumber,new {@class="form-control", @placeholder="Contact Number", required = "required", @type = "tel", pattern = "^\\d{10}$" })
                         <div class="invalid-feedback">
                            *Please provide a valid Contact.
                        </div>
                    </div>
                    <div class="form-group mt-3">
                        <label for="exampleInputEmail1" class="form-label">Email address</label>
                        @Html.TextBoxFor(x=>x.Email,new {@class="form-control", @placeholder="Email", required = "required", type = "email",pattern="^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"})
                        <div class="invalid-feedback">
                            *Please provide a valid Email.
                        </div>
                    </div>

                    <div class="form-group mt-3">
                        <label for="exampleInputPassword1">Password</label>
                        @Html.PasswordFor(x=>x.Password,new {@class="form-control", required = "required", @placeholder="Password", id = "Password"})
                         <div class="invalid-feedback">
                            *Please provide a valid Password.
                        </div>
                    </div>

                    <div class="form-group  mt-3">
                        <label for="exampleInputPassword1">Confirm New Password</label>
                        @Html.PasswordFor(x=>x.Confirmpassword,new {@class="form-control", required = "required", @placeholder="Confirmpassword", data_val_equalto = "#Password"})
                         <div class="invalid-feedback">
                            *Please provide a valid Confirm Password.
                        </div>
                        @{
                            if(@ViewData["PassConfirmCheck"]!=null)
                        {                        
                            <span style="color: red;font-size: 14px;"> @ViewData["PassConfirmCheck"]</span>
                        }
                        }
                        
                    </div>


                    <button type="submit" class="btn btn-outline-warning w-100 rounded-pill mt-4">Register</button>


                    <p class="alreadylogin mt-3">Already Register?<span><a href="/Home/Login">Login Now</a></span></p>

                    <p class="privacy">Privacy Policy</p>


                }






            </div>
        </div>
    </div>


     <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
(function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
        .forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
            }, false)
        })
})()

    </script>


</body>

</html>
